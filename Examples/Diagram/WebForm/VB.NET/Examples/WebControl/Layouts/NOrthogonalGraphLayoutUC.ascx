<%@ Control Language="vb" Inherits="Nevron.Examples.Diagram.Webform.NOrthogonalGraphLayoutUC" CodeFile="NOrthogonalGraphLayoutUC.ascx.vb" %>
<%@ Register TagPrefix="ncwd" Namespace="Nevron.Diagram.WebForm" Assembly="Nevron.Diagram.WebForm" %>

<!-- Example layout BEGIN -->
<table id="exampleRootTable" style="width: 704px; vertical-align: top;" summary="Example layout table">
<tr>
	<td id="exampleImageCell" class="ImageCell" style="width: 442px; vertical-align: top;">
		<!-- Diagram control placeholder BEGIN -->
		<ncwd:NDrawingView id="NDrawingView1" runat="server" Width="416px" Height="336px"
			AjaxEnabled="True" OnAsyncCustomCommand="NDrawingView1_AsyncCustomCommand"
			OnAsyncQueryCommandResult="NDrawingView1_AsyncQueryCommandResult" />
		<!-- Diagram control placeholder END -->
	</td>
	<td id="exampleVDelimiterCell" class="DelimiterCell" rowspan="2">&nbsp;</td>
	<td id="exampleConfigurationCell" class="ControlsPanel" rowspan="2" style="width: 249px;">
		<!-- Configuration controls panel placeholder BEGIN -->
		<table id="properties">
			<tr>
				<td style="padding:3px">Compact</td>
				<td style="padding:3px"><input type="checkbox" id="Compact" checked="checked" /></td>
			</tr>
			<tr>
				<td style="padding:3px">Cell Spacing</td>
				<td style="padding:3px"><input type="text" id="CellSpacing" value="10"  maxlength="3" style="width:30px;" onchange="ValidateTextBox(this, 'float', 10, 0, 999)" /></td>
			</tr>
		</table>
		
		<hr class="WhiteHr" />
		
		<p>
			<input type="button" id="btnLayout" value="Layout" style="width:240px" onclick="InvokeCustomCommand(this.id)" /><br />
		</p>
		<p>
			<input type="button" id="btn1" value="Random graph (10 vertices, 15 edges)" style="width:240px; font-size:8pt" onclick="InvokeCustomCommand(this.id)" /><br />
			<input type="button" id="btn2" value="Random graph (20 vertices, 25 edges)" style="width:240px; font-size:8pt" onclick="InvokeCustomCommand(this.id)" /><br />
		</p>
		<!-- Configuration controls panel placeholder END -->
	</td>
</tr>
<tr>
	<td id="exampleDescriptionCell" class="Description">
		<!-- Description box placeholder BEGIN -->
		<p>
			The orthogonal graph layout produces orthogonal graph drawings of all types of graphs
			(including those with self-loops and duplicate edges). It tries to compact the graph
			drawing area and also to minimize the number of edge crossings and bends.
		</p>
		<p>
			The most important properties are:
			<ul>
				<li>
					<b>CellSpacing</b> - determines the distance between 2 grid cells. For example if a grid
					cell is calculated to have a size of 100 x 100 and the CellSpacing property is set to
					10, then the cell size will be 120 x 120. Note that the node is always placed in the
					middle of the cell.
				</li>
				<li>
					<b>Compact</b> - if set to true, a compaction algorithm will be applied to the embedded
					graph. This will decrease the total area of the drawing with 20 to 50 % (in the average
					case) at the cost of some additional time needed for the calculations.
				</li>
				<li>
					<b>PlugSpacing</b> - determines the spacing between the plugs of a node.
					You can set a fixed amount of spacing or a proportional spacing, which means that the plugs
					are distributed along the whole side of the node.
				</li>
			</ul>
		</p>
		<br />
		<!-- Description box placeholder END -->
	</td>
</tr>
</table>
<!-- Example layout END -->

<!-- Custom JavaScript placeholder START -->
<script type="text/javascript" language="javascript">
<!--
	//  sends a custom command to the server using async callback
	function InvokeCustomCommand(sender)
	{
		if(typeof(NDiagramCallbackService) == "undefined")
			return;
			
		//	The full hierarchical id of the diagram control must be used, e.g. "ctl04_NDrawingView1"
		//	rather than just "NDrawingView1". The "ctl05" is the id generated by the ASP.NET framework 
		//	for the user control hosting the diagram control.
		var cs = NDiagramCallbackService.GetCallbackService('ctl04_NDrawingView1');
		cs.InvokeCustomCommand(sender, GetProperties());
	}
//-->
</script>
<!-- Custom JavaScript placeholder END -->