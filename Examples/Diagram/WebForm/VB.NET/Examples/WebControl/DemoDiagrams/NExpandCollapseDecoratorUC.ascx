<%@ Control Language="vb" Inherits="Nevron.Examples.Diagram.Webform.NExpandCollapseDecoratorUC" CodeFile="NExpandCollapseDecoratorUC.ascx.vb" %>
<%@ Register TagPrefix="cc1" Namespace="Nevron.Diagram.WebForm" Assembly="Nevron.Diagram.WebForm" %>
<table id="exampleRootTable" style="width:800px;vertical-align:top;" summary="Example layout table">
	<tr>
		<td id="exampleImageCell" class="ImageCell">
			<cc1:NDrawingView id="NDrawingView1" runat="server" Width="550px" Height="550px" AjaxEnabled="True"
				AsyncCallbackTimeout="1000" OnAsyncClick="NDrawingView1_AsyncClick"
				OnQueryAjaxTools="NDrawingView1_QueryAjaxTools"
				OnAsyncCustomCommand="NDrawingView1_AsyncCustomCommand"
				OnAsyncQueryCommandResult="NDrawingView1_AsyncQueryCommandResult"/>
		</td>
		<td id="exampleVDelimiterCell" class="DelimiterCell" rowspan="2">&nbsp;</td>
		<td id="exampleConfigurationCell" class="ControlsPanel" rowspan="2" style="width: 270px;">
			<!-- Configuration controls panel placeholder BEGIN -->
			<form>
				<p>Background Shape:<br />
					<input type="radio" name="background" onclick="InvokeCustomCommand(this.name, this.value)" value="Ellipse" />Ellipse<br />
					<input type="radio" name="background" onclick="InvokeCustomCommand(this.name, this.value)" value="Rectangle" checked="checked" />Rectangle<br />
					<input type="radio" name="background" onclick="InvokeCustomCommand(this.name, this.value)" value="RoundedRectangle" />Rounded Rectangle<br />
				</p>            
				<p>Symbol Shape:<br />
					<input type="radio" name="symbol" onclick="InvokeCustomCommand(this.name, this.value)" value="PlusMinus" checked="checked" />Plus Minus<br />
					<input type="radio" name="symbol" onclick="InvokeCustomCommand(this.name, this.value)" value="UpDownArrow" />Up-Down Arrow<br />
					<input type="radio" name="symbol" onclick="InvokeCustomCommand(this.name, this.value)" value="UpDownTriangle" />Up-Down Triangle<br />
					<input type="radio" name="symbol" onclick="InvokeCustomCommand(this.name, this.value)" value="UpDownDoubleArrow" />Up-Down Double Arrow<br />
					<input type="radio" name="symbol" onclick="InvokeCustomCommand(this.name, this.value)" value="UpDownDoubleTriangle" />Up-Down Double Triangle<br />
					<input type="radio" name="symbol" onclick="InvokeCustomCommand(this.name, this.value)" value="RightDownArrow" />Right-Down Arrow<br />
					<input type="radio" name="symbol" onclick="InvokeCustomCommand(this.name, this.value)" value="RightDownTriangle" />Right-Down Triangle<br />
				</p>
				<p>Position:<br />
					<input type="radio" name="position" onclick="InvokeCustomCommand(this.name, this.value)" value="Left" checked="checked" />Left<br />
					<input type="radio" name="position" onclick="InvokeCustomCommand(this.name, this.value)" value="Right" />Right<br />
				</p>            
			</form>
			<!-- Configuration controls panel placeholder END -->
		</td>
	</tr>
	<tr>
		<td id="exampleDescriptionCell" class="Description">
			<p>
				This example demonstrates expand-collapsible groups, expand-collapse decorators and frame decorators.
			</p>
			<p>
				Groups (as any other shape) can be in either expanded or collapsed state. When a shape is collapsed it will typically render only its decorators. The content of the shape - such as graphics primitives, shapes, labels, ports etc. is considered "collapsed" and will therefore not be visible and hit testable. Connectors are also specially adjusted to handle the case when they are not themselves collapsed but link collapsed content.
			</p>
			<p>
				The expand-collapse decorator is a decorator, which consists of a symbol and background. Clicking the expand-collapse decorator toggles the expanded-collapsed state of the shape to which it belongs. In this example we have created three groups with expand collapse decorators.
			</p>
			<p>
				The frame decorator is a decorator, which is used to add header and/or background to a shape. In this example the three groups have frame decorators too. Note that a shape may be instructed to be considered hit, if a decorator marked as "shape hit testable" is hit. In this example clicking on a frame decorator background, frame or header will select the respective group, since it will be considered hit if the frame decorator is hit.
			</p>
		</td>
	</tr>
</p>

<!-- Custom JavaScript placeholder START -->
<script type="text/javascript" language="javascript">
<!--
	//  sends a custom command to the server using async callback
	function InvokeCustomCommand(sender, value)
	{
		if(typeof(NDiagramCallbackService) == "undefined")
			return;
			
		//	The full hierarchical id of the diagram control must be used, e.g. "ctl04_NDrawingView1"
		//	rather than just "NDrawingView1". The "ctl05" is the id generated by the ASP.NET framework 
		//	for the user control hosting the diagram control.
		var cs = NDiagramCallbackService.GetCallbackService('ctl04_NDrawingView1');        
		var args = new Array();
		args["value"] = value;
		cs.InvokeCustomCommand(sender, args);
	}
//-->
</script>
<!-- Custom JavaScript placeholder END -->
