<%@ Control Language="c#" Inherits="Nevron.Examples.Chart.WebForm.NDataZoomingDemoUC" CodeFile="NDataZoomingDemoUC.ascx.cs" %>
<%@ Register TagPrefix="ncwc" Namespace="Nevron.Chart.WebForm" Assembly="Nevron.Chart.WebForm" %>

<!-- Example layout BEGIN -->
<table id="exampleRootTable" style="width: 669px; vertical-align: top;" summary="Example layout table">
<tr>
	<td id="exampleImageRootCell" rowspan="2" style="width: 420px; vertical-align: top; padding: 3px;">
		<table id="exampleImageTable" style="width: 420px; vertical-align: top;" summary="Image and description table">
		<tr>
			<td id="exampleImageCell" style="width: 420px; vertical-align: top; padding: 3px;">
				<!-- Chart control 1 placeholder BEGIN -->
				<ncwc:NChartControl id="nChartControl1" runat="server" Width="420px" Height="190px" AjaxEnabled="True" AsyncClickEventEnabled="False" AsyncRefreshInterval="1000" AsyncCallbackTimeout="10000" AsyncImageLoadTimeout="5000" OnQueryAjaxTools="nChartControl1_QueryAjaxTools">
				</ncwc:NChartControl>
				<!-- Chart control 1 placeholder END -->
			</td>
		</tr>
		<tr>
			<td id="exampleImageCell2" style="width: 420px; vertical-align: top; padding: 3px;">
				<!-- Chart control 2 placeholder BEGIN -->
				<ncwc:NChartControl id="nChartControl2" runat="server" Width="420px" Height="220px" AjaxEnabled="True" AsyncClickEventEnabled="False" AsyncRefreshInterval="1000" AsyncCallbackTimeout="10000" AsyncRefreshEnabled="True" AjaxImageMapMode="Never" OnAsyncCustomCommand="nChartControl2_AsyncCustomCommand" OnAsyncQueryCommandResult="nChartControl2_AsyncQueryCommandResult">
				</ncwc:NChartControl>
				<!-- Chart control 2 placeholder END -->
			</td>
		</tr>
		</table>
	</td>
	<td id="exampleVDelimiterCell" class="DelimiterCell" rowspan="2">&nbsp;</td>
	<td id="exampleControlsRootCell" style="width: 249px; vertical-align: top; padding-right: 3px;">
		<table id="exampleControlsTable" style="width: 249px; vertical-align: top;" summary="Example configuration table">
		<tr>
			<td id="exampleControlsCell" class="ControlsPanel" style="width: 249px; vertical-align: top; padding: 3px;">
				<!-- Configuration controls panel placeholder BEGIN -->
				<asp:Panel id="Panel1" runat="server" Width="249px" Height="40px">
					Data Window Size: &nbsp;<select id="dataWindowDropdown" onchange="UpdateDataWindow();">
						<option value="500">500</option>
						<option value="750" selected="selected">750</option>
						<option value="1500">1500</option>
						<option value="3000">3000</option>
					</select>
				</asp:Panel>
				<!-- Configuration controls panel placeholder END -->
			</td>
		</tr>
		</table>
	</td>
</tr>
<tr>
	<td id="exampleDescriptionCell">
		<p id="exampleDescriptionParagraph" class="Description">
			<!-- Description box placeholder BEGIN -->
				The example demonstrates how two Nevron Chart controls can be
				combined to implement data zooming functionality with AJAX.
				In order to achieve this, the following AJAX features are used:
				<br />&nbsp;<br />
				- <b>Asynchronous click processing tool</b> - updates the 
					selection range of the data window of the Wave Preview chart;
				<br />&nbsp;<br />
				- <b>Client side click processing</b> - intercepts the mouse clicks over
					the Wave Preview chart and sends custom commands to the server;
				<br />&nbsp;<br />
				- <b>Asynchronous custom commands</b> - custom commands are sent to the
					server to update the Wave Details chart and the size of the data window;
				<br />&nbsp;<br />
				- <b>Nevron Instant Callback</b> - optimizes the loading time of 
					the Wave Preview chart.
				<br />
			<!-- Description box placeholder END -->
		</p>
	</td>
</tr>
</table>
<!-- Example layout END -->

<!-- Custom JavaScript placeholder BEGIN -->
<script type="text/javascript" language="javascript">
<!--
	var lastClickX = 0;
	
	function UpdateDataWindow()
	{
		if(typeof(NChartCallbackService) == "undefined")
			return;
			
		var dataWindowDropdown = document.getElementById("dataWindowDropdown");
		var windowWidth = dataWindowDropdown.options[dataWindowDropdown.selectedIndex].value;
		var attributes = new Array();
		attributes["x"] = lastClickX;
		attributes["width"] = windowWidth;
		
		//	The full hierarchical id of the chart control must be used, e.g. "ctl04_nChartControl2"
		//	rather than just "nChartControl2". The "ctl04" is the id generated by the ASP.NET framework 
		//	for the user control hosting the chart control.
		var zoomChartCs = NChartCallbackService.GetCallbackService('ctl04_nChartControl2');
		zoomChartCs.InvokeCustomCommand("displayDataWindow", attributes);

		//	The full hierarchical id of the chart control must be used, e.g. "ctl04_nChartControl1"
		//	rather than just "nChartControl1". The "ctl04" is the id generated by the ASP.NET framework 
		//	for the user control hosting the chart control.
		var previewChartCs = NChartCallbackService.GetCallbackService('ctl04_nChartControl1');
		previewChartCs.InvokeCustomCommand("setDataWindowWidth", attributes);
	}

	function OnClick(self, eventTarget, pageOffset, screenOffset, localOffset)
	{
		if(typeof(NChartCallbackService) == "undefined")
			return;
			
		//	The full hierarchical id of the chart control must be used, e.g. "ctl04_nChartControl1"
		//	rather than just "nChartControl1". The "ctl04" is the id generated by the ASP.NET framework 
		//	for the user control hosting the chart control.
		var previewChartCs = NChartCallbackService.GetCallbackService('ctl04_nChartControl1');
		if(!NObject.CompareObjects(previewChartCs, eventTarget.CallbackService))
		{
			return;
		}
		
		//	The full hierarchical id of the chart control must be used, e.g. "ctl04_nChartControl2"
		//	rather than just "nChartControl2". The "ctl04" is the id generated by the ASP.NET framework 
		//	for the user control hosting the chart control.
		var cs = NChartCallbackService.GetCallbackService('ctl04_nChartControl2');
		
		var dataWindowDropdown = document.getElementById("dataWindowDropdown");
		var windowWidth = dataWindowDropdown.options[dataWindowDropdown.selectedIndex].value;
		
		lastClickX = localOffset.offsetLeft;
		var attributes = new Array();
		attributes["x"] = lastClickX;
		attributes["width"] = windowWidth;
		cs.InvokeCustomCommand("displayDataWindow", attributes);
	}
	
	NEventSinkService.MouseClick.Subscribe(null, OnClick);
//-->
</script>
<!-- Custom JavaScript placeholder END -->
